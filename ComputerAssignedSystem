import java.util.Scanner;

public class ComputerAssignmentSystem {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Array representing 5 computers, all initially vacant
        String[] computers = {"Vacant", "Vacant", "Vacant", "Vacant", "Vacant"};

        while (true) {
            // Displaying the menu
            System.out.println("\n--- Computer Assignment System ---");
            System.out.println("1. Assign a Computer");
            System.out.println("2. View Computers");
            System.out.println("3. Free a Computer");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            
            // Handle invalid inputs in the menu choice
            int choice = getValidChoice(sc);
            
            // Switch case for handling different actions
            switch (choice) {
                case 1:
                    assignComputer(computers, sc);
                    break;
                case 2:
                    viewComputers(computers);
                    break;
                case 3:
                    freeComputer(computers, sc);
                    break;
                case 4:
                    System.out.println("Exiting the system. Goodbye!");
                    sc.close();
                    return; // Exit the program
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    // Helper method to ensure the menu choice input is valid
    public static int getValidChoice(Scanner sc) {
        while (true) {
            try {
                int choice = Integer.parseInt(sc.nextLine().trim());
                if (choice >= 1 && choice <= 4) {
                    return choice;
                } else {
                    System.out.print("Please enter a number between 1 and 4: ");
                }
            } catch (NumberFormatException e) {
                System.out.print("Invalid input. Please enter a number between 1 and 4: ");
            }
        }
    }

    // Method to assign a computer to a user
    public static void assignComputer(String[] computers, Scanner sc) {
        int vacantIndex = -1;
        
        // Find the first vacant computer
        for (int i = 0; i < computers.length; i++) {
            if (computers[i].equals("Vacant")) {
                vacantIndex = i;
                break;
            }
        }

        // If all computers are occupied
        if (vacantIndex == -1) {
            System.out.println("All computers are currently occupied. Please wait.");
        } else {
            // Ask user for their name and assign the computer
            System.out.print("Enter your name to assign a computer: ");
            String name = sc.nextLine().trim();
            computers[vacantIndex] = name;
            System.out.println("Computer " + (vacantIndex + 1) + " has been assigned to " + name + ".");
        }
    }

    // Method to view the status of all computers
    public static void viewComputers(String[] computers) {
        System.out.println("\n--- Computer Status ---");
        for (int i = 0; i < computers.length; i++) {
            System.out.println("Computer " + (i + 1) + ": " + computers[i]);
        }
    }

    // Method to free a computer
    public static void freeComputer(String[] computers, Scanner sc) {
        System.out.println("\n--- Free a Computer ---");
        
        // Get valid computer number to free
        int computerNumber = getValidComputerNumber(sc);

        // Check if the computer is vacant or assigned
        if (computers[computerNumber - 1].equals("Vacant")) {
            System.out.println("Computer " + computerNumber + " is already vacant.");
        } else {
            System.out.println("Computer " + computerNumber + " (" + computers[computerNumber - 1] + ") has been freed.");
            computers[computerNumber - 1] = "Vacant"; // Free the computer
        }
    }

    // Helper method to ensure valid computer number input
    public static int getValidComputerNumber(Scanner sc) {
        while (true) {
            System.out.print("Enter the computer number to free (1-5): ");
            try {
                int computerNumber = Integer.parseInt(sc.nextLine().trim());
                if (computerNumber >= 1 && computerNumber <= 5) {
                    return computerNumber;
                } else {
                    System.out.println("Invalid computer number. Please enter a number between 1 and 5.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a valid number.");
            }
        }
    }
}
